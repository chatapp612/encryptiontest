{"version":3,"sources":["components/App.js","contexts/Web3Context.js","components/AddContactPage.js","components/Home.js","components/MainApp.js","index.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","RC4","key","_classCallCheck","state","j","initialize","_createClass","_toConsumableArray","map","char","charCodeAt","_ref","input","output","k","_ref2","byte","message","encrypted","process","Buffer","from","toString","encryptedMessage","encryptedBytes","decrypted","String","fromCharCode","apply","App","_useState","useState","_useState2","_slicedToArray","setMessage","_useState3","_useState4","allMessages","setAllMessages","_useState5","_useState6","senders","setSenders","_useState7","_useState8","selectedSender","setSelectedSender","location","useLocation","navigate","useNavigate","_useWeb","useWeb3","contract","account","setAccount","username","useEffect","recipient","fetchMessages","fetchMessagesForSender","deriveEncryptionKey","_ref3","_asyncToGenerator","_callee","recipientPublicKeyHex","privateKeyHex","recipientPublicKey","privateKey","rawSecret","derivedKey","_context","methods","getPublicKey","localStorage","getItem","concat","sodium","from_hex","crypto_scalarmult","crypto_kdf_derive_from_key","setItem","to_hex","t0","console","error","arguments","sendMessage","_ref4","_callee2","sessionKeyHex","rc4","gasEstimate","_context2","alert","encrypt","estimateGas","send","gas","_ref5","_callee4","_allMessages","uniqueSenders","sendersWithNames","_context4","fetchAllMessagesForLoggedInAccount","Set","msg","sender","all","_ref6","_callee3","_context3","getUserName","t1","address","_x","_ref7","_callee5","_username","_context5","getUsernameByAddress","_x2","_ref8","_callee6","_allMessages2","messagesWithSender","formattedMessages","_iterator","_step","_context6","filter","_objectSpread","timestamp","direction","sort","b","_createForOfIteratorHelper","content","decrypt","_x3","React","createElement","className","senderObj","index","onClick","window","href","log","Date","toLocaleString","onChange","target","placeholder","Web3Context","createContext","useContext","Web3Provider","children","web3","setWeb3","setContract","web3Instance","accounts","networkId","deployedNetwork","contractInstance","ethereum","Web3","request","eth","getAccounts","net","getId","MessageStoreContract","networks","Contract","abi","initWeb3","Provider","logout","AddContactPage","users","setUsers","setError","fetchUsers","result","addresses","usernames","usersData","getAllRegisteredUsers","Array","isArray","user","handleUserClick","require","Home","setOpen","setUsername","password","setPassword","_useState9","_useState10","isRegistered","setIsRegistered","_useState11","_useState12","currentUsername","setCurrentUsername","_useState13","_useState14","checkIfRegistered","existingUsername","getUsername","generateKeys","keyPair","publicKeyHex","blob","url","link","ready","crypto_kx_keypair","publicKey","Blob","URL","createObjectURL","document","download","body","appendChild","click","removeChild","revokeObjectURL","handleSignUpSubmit","passwordErrors","getPasswordStrengthError","join","registerUser","updatePublicKey","handleLogin","hashedPassword","storedHashedPassword","utils","keccak256","getPasswordHash","errors","test","Fragment","MainApp","Routes","Route","path","element","ReactDOM","render","StrictMode","HashRouter","getElementById"],"mappings":"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","file":"static/js/main.0dd54d31.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { useWeb3 } from '../contexts/Web3Context.js';\nimport sodium from \"libsodium-wrappers\";\n\nclass RC4 {\n    constructor(key) {\n        this.key = key;\n        this.state = [];\n        this.i = 0;\n        this.j = 0;\n        this.initialize();\n    }\n\n    initialize() {\n        const key = [...this.key].map((char) => char.charCodeAt(0));\n        for (let i = 0; i < 256; i++) this.state[i] = i;\n        let j = 0;\n        for (let i = 0; i < 256; i++) {\n            j = (j + this.state[i] + key[i % key.length]) % 256;\n            [this.state[i], this.state[j]] = [this.state[j], this.state[i]];\n        }\n    }\n\n    process(input) {\n        const output = [];\n        for (let k = 0; k < input.length; k++) {\n            this.i = (this.i + 1) % 256;\n            this.j = (this.j + this.state[this.i]) % 256;\n            [this.state[this.i], this.state[this.j]] = [this.state[this.j], this.state[this.i]];\n            const byte = this.state[(this.state[this.i] + this.state[this.j]) % 256];\n            output.push(input[k] ^ byte);\n        }\n        return output;\n    }\n\n    encrypt(message) {\n        const input = [...message].map((char) => char.charCodeAt(0));\n        const encrypted = this.process(input);\n        return Buffer.from(encrypted).toString('hex');\n    }\n\n    decrypt(encryptedMessage) {\n        const encryptedBytes = Buffer.from(encryptedMessage, 'hex');\n        const decrypted = this.process([...encryptedBytes]);\n        return String.fromCharCode(...decrypted);\n    }\n}\n\nconst App = () => {\n    const [message, setMessage] = useState('');\n    const [allMessages, setAllMessages] = useState([]);\n    const [senders, setSenders] = useState([]);\n    const [selectedSender, setSelectedSender] = useState(null);\n    const location = useLocation();\n    const navigate = useNavigate();\n    const { contract, account, setAccount } = useWeb3();\n    const username = (location.state && location.state.username) ? location.state.username : '';\n\n    useEffect(() => {\n        if (location.state && location.state.recipient) {\n            setSelectedSender(location.state.recipient);\n        }\n        if (contract && account) {\n            fetchMessages();\n            if (location.state && location.state.recipient) {\n                fetchMessagesForSender(location.state.recipient);\n            }\n        }\n    }, [contract, account, location.state && location.state.recipient]);\n\n    const deriveEncryptionKey = async () => {\n        try {\n            const recipientPublicKeyHex = await contract.methods.getPublicKey(selectedSender).call({ from: account });\n            const privateKeyHex = localStorage.getItem(`privateKey-${account}`);\n            if (!privateKeyHex) {\n                throw new Error(\"Private key not found in localStorage.\");\n            }\n\n            const recipientPublicKey = sodium.from_hex(recipientPublicKeyHex);\n            const privateKey = sodium.from_hex(privateKeyHex);\n            const rawSecret = sodium.crypto_scalarmult(privateKey, recipientPublicKey);\n\n            const derivedKey = sodium.crypto_kdf_derive_from_key(32, 1, 'encryption', rawSecret);\n            localStorage.setItem(`${account}_${selectedSender}`, sodium.to_hex(derivedKey));\n            return sodium.to_hex(derivedKey);\n        } catch (error) {\n            console.error(\"Error deriving encryption key:\", error);\n        }\n    };\n\n    const sendMessage = async () => {\n        if (!selectedSender || !message) {\n            alert(\"Both recipient and message fields are required.\");\n            return;\n        }\n        if (contract) {\n            try {\n                let sessionKeyHex = localStorage.getItem(`${account}_${selectedSender}`) ||\n                    localStorage.getItem(`${selectedSender}_${account}`);\n    \n                if (!sessionKeyHex) {\n                    sessionKeyHex = await deriveEncryptionKey();\n                }\n    \n                const rc4 = new RC4(sessionKeyHex);\n                const encryptedMessage = rc4.encrypt(message);\n    \n                const gasEstimate = await contract.methods.sendMessage(selectedSender, encryptedMessage).estimateGas({ from: account });\n                await contract.methods.sendMessage(selectedSender, encryptedMessage).send({ from: account, gas: gasEstimate + 100000 });\n    \n                alert(\"Message sent successfully!\");\n                setMessage('');\n    \n                fetchMessagesForSender(selectedSender);\n            } catch (error) {\n                console.error(\"Transaction Error:\", error);\n                alert(\"Transaction failed: \" + error.message);\n            }\n        } else {\n            alert(\"Contract not initialized.\");\n        }\n    };\n\n    const fetchMessages = async () => {\n        if (contract) {\n            try {\n                const allMessages = await contract.methods.fetchAllMessagesForLoggedInAccount().call({ from: account });\n                const uniqueSenders = [...new Set(allMessages.map(msg => msg.sender === account ? msg.recipient : msg.sender))];\n\n                const sendersWithNames = await Promise.all(\n                    uniqueSenders.map(async (sender) => ({\n                        address: sender,\n                        name: await getUserName(sender),\n                    }))\n                );\n                setSenders(sendersWithNames);\n            } catch (error) {\n                console.error(\"Error fetching messages:\", error);\n                alert(\"Error fetching messages: \" + error.message);\n            }\n        } else {\n            alert(\"Contract not initialized.\");\n        }\n    };\n\n    const getUserName = async (address) => {\n        if (contract) {\n            try {\n                const username = await contract.methods.getUsernameByAddress(address).call();\n                return username || address;\n            } catch (error) {\n                console.error(\"Error fetching the name:\", error);\n                return address;\n            }\n        }\n        return address;\n    };\n\n    const fetchMessagesForSender = async (sender) => {\n        if (contract) {\n            try {\n                const allMessages = await contract.methods.fetchAllMessagesForLoggedInAccount().call({ from: account });\n                const messagesWithSender = allMessages.filter(\n                    msg => (msg.sender === sender && msg.recipient === account) || \n                           (msg.sender === account && msg.recipient === sender)\n                );\n    \n                const formattedMessages = messagesWithSender.map(msg => ({\n                    ...msg,\n                    timestamp: msg.timestamp * 1000,\n                    direction: msg.sender === account ? 'sent' : 'received',\n                }));\n    \n                formattedMessages.sort((a, b) => a.timestamp - b.timestamp);\n    \n                for (let msg of formattedMessages) {\n                    let sessionKeyHex = localStorage.getItem(`${account}_${sender}`) ||\n                        localStorage.getItem(`${sender}_${account}`);\n    \n                    if (!sessionKeyHex) {\n                        sessionKeyHex = await deriveEncryptionKey();\n                    }\n    \n                    const rc4 = new RC4(sessionKeyHex);\n                    msg.content = rc4.decrypt(msg.content);\n                }\n    \n                setAllMessages(formattedMessages);\n                setSelectedSender(sender);\n            } catch (error) {\n                console.error(\"Error fetching messages for sender:\", error);\n                alert(\"Error fetching messages for sender: \" + error.message);\n            }\n        } else {\n            alert(\"Contract not initialized.\");\n        }\n    };\n\n    const goToAddContactPage = () => {\n        navigate('/add-contact');\n    };\n\n    const handleLogout = () => {\n        setAccount(null);\n        window.location.href = '/';\n    };\n\n    return (\n        <div className=\"app\">\n            <div className=\"sidebar\">\n            \n                <h2>{username}</h2>\n                <p>Your Ethereum address: {account}</p>\n\n                <ul className=\"senders-list\">\n                    {senders.length > 0 ? (\n                        senders.map((senderObj, index) => (\n                            <li key={index} onClick={() => fetchMessagesForSender(senderObj.address)}>\n                                <span>{senderObj.name}</span>\n                            </li>\n                        ))\n                    ) : (\n                        <li>No contacts available.</li>\n                    )}\n                </ul>\n            </div>\n\n            <div className=\"chat-container\">\n                <div className=\"chat-header\">\n                    <h2>{selectedSender}</h2>\n                    <button onClick={goToAddContactPage} className=\"addcontact-button\">All Contacts</button>\n                    <button onClick={handleLogout} className=\"logout-button\">Logout</button>\n                </div>\n\n                <div className=\"chat-window\">\n    <ul className=\"messages\">\n        {allMessages.length > 0 ? (\n            allMessages.map((msg, index) => (\n                <li key={index} className={msg.direction}>\n                   { console.log(msg.direction)}\n                    <p>{msg.content}</p>\n                    <span className=\"timestamp\">{new Date(msg.timestamp).toLocaleString()}</span>\n                </li>\n            ))\n        ) : (\n            <li>No messages to display</li>\n        )}\n    </ul>\n</div>\n\n                <div className=\"message-form\">\n                    <input\n                        type=\"text\"\n                        value={message}\n                        className=\"message-input\"\n                        onChange={(e) => setMessage(e.target.value)}\n                        placeholder=\"Type a message...\"\n                    />\n                    <button onClick={sendMessage} className=\"send-button\">Send</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport MessageStoreContract from '../abis/MessageStore.json'; // Import the ABI\n\n// Create the Web3 context\nconst Web3Context = createContext();\n\n// Custom hook to access the Web3Context\nexport const useWeb3 = () => {\n    return useContext(Web3Context);\n};\n\n// Web3Provider component\nexport const Web3Provider = ({ children }) => {\n    const [web3, setWeb3] = useState(null);\n    const [contract, setContract] = useState(null);\n    const [account, setAccount] = useState('');\n\n    useEffect(() => {\n        const initWeb3 = async () => {\n            if (window.ethereum) {\n                try {\n                    const web3Instance = new Web3(window.ethereum);\n                    await window.ethereum.request({ method: 'eth_requestAccounts' });\n                    const accounts = await web3Instance.eth.getAccounts();\n                    setAccount(accounts[0]);\n\n                    const networkId = await web3Instance.eth.net.getId();\n                    const deployedNetwork = MessageStoreContract.networks[networkId];\n                    if (deployedNetwork) {\n                        const contractInstance = new web3Instance.eth.Contract(MessageStoreContract.abi, deployedNetwork.address);\n                        setWeb3(web3Instance);\n                        setContract(contractInstance);\n                    } else {\n                        console.error(\"Contract not deployed on this network\");\n                    }\n                } catch (error) {\n                    console.error(\"Web3 initialization failed:\", error);\n                }\n            }\n        };\n\n        initWeb3();\n    }, []);\n\n    // Add a logout function to clear the account\n    const logout = () => {\n        setAccount(null);  // Clear the account to \"log out\" the user\n      \n    };\n\n    return (\n        <Web3Context.Provider value={{ web3, contract, account, setAccount, logout }}>\n            {children}\n        </Web3Context.Provider>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useWeb3 } from '../contexts/Web3Context.js';\nimport { useNavigate } from 'react-router-dom';\nimport './AddContactPage.css';\n\nconst AddContactPage = () => {\n    const { web3, contract, account } = useWeb3();\n    const [users, setUsers] = useState([]);\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (web3 && contract) {\n            fetchUsers();\n        }\n    }, [web3, contract]);\n\n    const fetchUsers = async () => {\n        try {\n            if (!web3 || !contract) {\n                setError('Web3 or contract is not initialized');\n                return;\n            }\n\n            const result = await contract.methods.getAllRegisteredUsers().call({ from: account });\n            const addresses = result[0];\n            const usernames = result[1];\n    \n            if (Array.isArray(addresses) && Array.isArray(usernames) && addresses.length > 0) {\n                // Combine addresses and usernames into a single array of objects\n                const usersData = addresses.map((address, index) => ({\n                    address,\n                    username: usernames[index]\n                })).filter(user => user.address !== account);\n                setUsers(usersData);\n            } else {\n                setUsers([]);\n            }\n        } catch (error) {\n            console.error('Error fetching users:', error);\n            setError('Failed to fetch users. Please try again later.');\n        }\n    };\n\n    const handleUserClick = (user) => {\n        navigate('/app#/app', { state: { recipient: user.address} });  // Passing the recipient address to App component\n    };\n\n    return (\n        <div className=\"add-contact-page\">\n            <div className=\"chat-header\">\n                <h2>All Registered Users</h2>\n            </div>\n            {error ? (\n                <div className=\"error-message\">{error}</div>\n            ) : (\n                <ul className=\"user-list\">\n                    {users.length > 0 ? (\n                        users.map((user, index) => (\n                            <li key={index} className=\"user-item\">\n                                <a href=\"/app#/app\" onClick={() => handleUserClick(user)}>{user.username}</a>\n                            </li>\n                        ))\n                    ) : (\n                        <div>No users registered yet.</div>\n                    )}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default AddContactPage;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useWeb3 } from '../contexts/Web3Context.js'; // Import the custom hook for web3 context\nimport Web3 from 'web3'; // Import Web3 to generate keys\nimport { sha256 } from 'js-sha256'; // Hash function to simulate randomness based on the address\nimport sodium from \"libsodium-wrappers\";\nimport './Home.css'; // Import Home specific styles\n\nconst crypto = require('crypto');\nconst fs = require('fs');\n\nconst Home = () => {\n    const [open, setOpen] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState(''); // New state for password\n    const [error, setError] = useState('');\n    const [isRegistered, setIsRegistered] = useState(false);\n    const [currentUsername, setCurrentUsername] = useState('');\n    const [currentAccount, setCurrentAccount] = useState('');\n    \n    const { web3, contract, account } = useWeb3(); // Access web3, contract, and account from the context\n    const navigate = useNavigate();\n    const secp256k1 = require(\"secp256k1\");\n\n    // Check if user is already registered on page load\n    useEffect(() => {\n        if (account && contract) {\n            checkIfRegistered();\n        }\n       \n    }, [account, contract]);\n\n    const checkIfRegistered = async () => {\n        try {\n            const existingUsername = await contract.methods.getUsername().call({ from: account });\n            if (existingUsername) {\n                setCurrentUsername(existingUsername);\n                setIsRegistered(true);\n            } else {\n                setIsRegistered(false);\n            }\n        } catch (error) {\n            console.error(\"Error checking registration status:\", error);\n            setError(\"Failed to check registration status.\");\n        }\n    };\n\n    const handleSignUpOpen = () => {\n        setOpen(true);\n    };\n\n    const generateKeys = async () => {\n        await sodium.ready;\n        const keyPair = sodium.crypto_kx_keypair();\n        console.log(\"keypairs generated\");\n        const publicKeyHex = sodium.to_hex(keyPair.publicKey);\n        const privateKeyHex = sodium.to_hex(keyPair.privateKey);\n\n        localStorage.setItem(`privateKey-${account}`, privateKeyHex);\n        console.log(`Private key for ${account} stored in local storage!`);\n\n        const blob = new Blob([privateKeyHex], { type: \"text/plain\" });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.download = \"private_key.txt\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n\n        return publicKeyHex;\n    };\n\n    const handleSignUpSubmit = async () => {\n        if (!username || !password) {\n            setError('Username and Password are required');\n            return;\n        }\n        if (username.length < 3 || username.length > 100) {\n            setError('Username must be between 3 and 100 characters');\n            return;\n        }\n\n        const passwordErrors = getPasswordStrengthError(password);\n    \n        if (passwordErrors.length > 0) {\n            setError(passwordErrors.join(' ')); // Join all error messages with space\n            return;\n        }\n        try {\n            const publicKeyHex = await generateKeys();\n\n            await contract.methods.registerUser(username, publicKeyHex, password).send({ from: account });\n            await contract.methods.updatePublicKey(publicKeyHex).send({ from: account });\n            console.log(\"public key stored on block\");\n\n            setOpen(false);\n            navigate('/app', { state: { account, username } });\n        } catch (error) {\n            console.error(\"Registration error:\", error);\n            setError(\"Registration failed. Please try again.\");\n        }\n    };\n\n    const handleLogin = async () => {\n        if (!password) {\n            setError('Password is required for login');\n            return;\n        }\n        try {\n            const hashedPassword = web3.utils.keccak256(password);\n\n            const username = await contract.methods.getUsername().call({ from: account });\n\n            const storedHashedPassword = await contract.methods.getPasswordHash(account).call();\n\n            const passwordValid = hashedPassword === storedHashedPassword;\n\n            if (passwordValid) {\n                console.log(\"Password is valid. User login successful.\");\n                setCurrentUsername(username);\n                navigate('/app', { state: { account, username } });\n            } else {\n                setError('Invalid password');\n            }\n        } catch (error) {\n            console.error(\"Login error:\", error);\n            setError(\"Login failed. Please try again.\");\n        }\n    };\n\nconst getPasswordStrengthError = (password) => {\n    const errors = [];\n    \n    if (password.length < 8) {\n        errors.push(\"Password must be at least 8 characters long.\");\n    }\n    if (!/[A-Z]/.test(password)) {\n        errors.push(\"Password must contain at least one uppercase letter.\");\n    }\n    if (!/[a-z]/.test(password)) {\n        errors.push(\"Password must contain at least one lowercase letter.\");\n    }\n    if (!/\\d/.test(password)) {\n        errors.push(\"Password must contain at least one number.\");\n    }\n    if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n        errors.push(\"Password must contain at least one special character.\");\n    }\n    \n    return errors;\n};\n\n\n    return (\n        <div className=\"login-container align\">\n            <div className=\"grid\">\n                <div className=\"login-box\">\n                    <h1 className=\"text--center\">Chat App</h1>\n                    {!isRegistered ? (\n                        <>\n                            <h2 className=\"text--center\">Sign Up</h2>\n                            <div className=\"form\">\n                                <div className=\"form__field\">\n                                    <input\n                                        className=\"form__input\"\n                                        type=\"text\"\n                                        placeholder=\"Username\"\n                                        value={username}\n                                        onChange={(e) => setUsername(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form__field\">\n                                    \n                                    <input\n                                        className=\"form__input\"\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)} // Bind password input\n                                    />\n                                </div>\n                                <button className=\"button login\" onClick={handleSignUpSubmit}>Sign Up</button>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <h2 className=\"text--center\">Welcome Back, {currentUsername}!</h2>\n                            <div className=\"form\">\n                                <div className=\"form__field\">\n                                    <input\n                                        className=\"form__input\"\n                                        type=\"password\"\n                                        placeholder=\"Enter Password to Login\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)} // Bind password input\n                                    />\n                                </div>\n                                <button className=\"button login\" onClick={handleLogin}>Login</button>\n                            </div>\n                        </>\n                    )}\n                    {error && <p className=\"error text--center\">{error}</p>} {/* Error handling */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home; \n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport App from './App';\nimport AddContactPage from './AddContactPage'; \nimport Home from './Home'; \nconst MainApp = () => {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/app\" element={<App />} />\n            <Route path=\"/add-contact\" element={<AddContactPage />} />\n        </Routes>\n    );\n};\n\nexport default MainApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'; // Import HashRouter\nimport MainApp from './components/MainApp'; // Main App\nimport { Web3Provider } from './contexts/Web3Context'; // Import Web3Context\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Provider>\n      <HashRouter>\n        <MainApp />\n      </HashRouter>\n    </Web3Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}